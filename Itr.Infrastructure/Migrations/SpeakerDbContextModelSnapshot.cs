// <auto-generated />
using System;
using Foss.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetAPI.Infrastructure;

#nullable disable

namespace Foss.Infrastructure.Migrations
{
    [DbContext(typeof(SpeakerDbContext))]
    partial class SpeakerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Foss.Domain.Entities.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptTerms = true,
                            Country = 0,
                            Dob = new DateTime(1985, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            Gender = 0,
                            Name = "Alice Johnson",
                            Phone = "+92-300-1234567"
                        },
                        new
                        {
                            Id = 2,
                            AcceptTerms = true,
                            Country = 3,
                            Dob = new DateTime(1990, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "brian.smith@example.com",
                            Gender = 1,
                            Name = "Brian Smith",
                            Phone = "+45-20-123456"
                        },
                        new
                        {
                            Id = 3,
                            AcceptTerms = true,
                            Country = 4,
                            Dob = new DateTime(1988, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.diaz@example.com",
                            Gender = 1,
                            Name = "Carlos Diaz",
                            Phone = "+212-600-123456"
                        },
                        new
                        {
                            Id = 4,
                            AcceptTerms = true,
                            Country = 2,
                            Dob = new DateTime(1992, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana.miller@example.com",
                            Gender = 0,
                            Name = "Diana Miller",
                            Phone = "+44-7700-900123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
